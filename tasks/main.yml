---
- name: Create security group
  ec2_group:
        name: "New-Webserver-Sec"
        aws_secret_key: '{{aws_secret_key}}'
        aws_access_key: '{{aws_access_key}}'
        description: "New-Webserver security group"
        region: "{{ region }}"
        rules:
         - proto: tcp
           ports:
             - 80
             - 22
           cidr_ip: 0.0.0.0/0
       
- name: Create an EC2 key
  ec2_key:
        name: "{{ keypair }}"
        region: "{{ region }}"
        aws_secret_key: '{{aws_secret_key}}'
        aws_access_key: '{{aws_access_key}}'
  register: ec2_key

- name: Save private key
  copy: content="{{ ec2_key.key.private_key }}" dest="./server-private.pem" mode=0600
  when: ec2_key.changed

- name: Create an ec2 instance
  ec2:
        key_name: "{{ keypair }}"
        aws_secret_key: '{{aws_secret_key}}'
        aws_access_key: '{{aws_access_key}}'
        group: New-Webserver-Sec
        instance_type: "{{ instance_type}}"
        image: "{{ ami }}"
        region: "{{ region }}"
        wait: no
        instance_tags:
             Name: "Webserver"
        count_tag:
             Name: "Webserver"
        exact_count: 2

  register: ec2_out

- name: "Aws InfraStructure Creation - Inventory Creation"
  add_host:
            groups: webservers
            name: "{{ item.public_ip }}"
            ansible_host: "{{ item.public_ip }}"
            ansible_port: 22
            ansible_user: ubuntu
            ansible_ssh_private_key_file: server-private.pem
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  with_items:
          - "{{ ec2_out.tagged_instances }}"
        
- name: Wait for the servers to come online
  wait_for:
                port: 22
                delay: 1
                timeout: 300
                host: '{{item.private_ip}}'
  with_items: "{{ ec2_out.tagged_instances }} "


- name: Refreshing inventory cache
  meta: refresh_inventory
